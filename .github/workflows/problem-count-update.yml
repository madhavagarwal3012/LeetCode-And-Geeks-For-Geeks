name: Update Problem Count
on:
  push:
    branches: [ main ]
permissions:
  contents: write
jobs:
  update-count:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Count problems and update README
        run: |
          echo "Directory structure:"
          find . -type d -not -path "*/\.*" -maxdepth 2 | sort
          
          # Count top-level regular problem directories (not in difficulty folders)
          regular_count=$(find . -mindepth 1 -maxdepth 1 -type d \
            -not -path "*/\.*" \
            -not -path "./.*" \
            -not -path "./__pycache__" \
            -not -path "./Difficulty: School" \
            -not -path "./Difficulty: Basic" \
            -not -path "./Difficulty: Easy" \
            -not -path "./Difficulty: Medium" \
            -not -path "./Difficulty: Hard" \
            | wc -l | tr -d ' ')
          
          echo "Regular problem directories: $regular_count"

          count_school=0
          count_basic=0
          count_easy=0
          count_medium=0
          count_hard=0

          echo "Checking difficulty directories:"
          
          if [ -d "Difficulty: School" ]; then
            echo "Difficulty: School files:"
            find "Difficulty: School" -type f -name "*.py"
            count_school=$(find "Difficulty: School" -type f -name "*.py" | wc -l | tr -d ' ')
          fi

          if [ -d "Difficulty: Basic" ]; then
            echo "Difficulty: Basic files:"
            find "Difficulty: Basic" -type f -name "*.py"
            count_basic=$(find "Difficulty: Basic" -type f -name "*.py" | wc -l | tr -d ' ')
          fi

          if [ -d "Difficulty: Easy" ]; then
            echo "Difficulty: Easy files:"
            find "Difficulty: Easy" -type f -name "*.py"
            count_easy=$(find "Difficulty: Easy" -type f -name "*.py" | wc -l | tr -d ' ')
          fi

          if [ -d "Difficulty: Medium" ]; then
            echo "Difficulty: Medium files:"
            find "Difficulty: Medium" -type f -name "*.py"
            count_medium=$(find "Difficulty: Medium" -type f -name "*.py" | wc -l | tr -d ' ')
          fi

          if [ -d "Difficulty: Hard" ]; then
            echo "Difficulty: Hard files:"
            find "Difficulty: Hard" -type f -name "*.py"
            count_hard=$(find "Difficulty: Hard" -type f -name "*.py" | wc -l | tr -d ' ')
          fi

          difficulty_total=$((count_school + count_basic + count_easy + count_medium + count_hard))
          
          echo "------------------------------"
          echo "School problems: $count_school"
          echo "Basic problems: $count_basic"
          echo "Easy problems: $count_easy"
          echo "Medium problems: $count_medium"
          echo "Hard problems: $count_hard"
          echo "Total difficulty problems: $difficulty_total"
          
          final_total=$((regular_count + difficulty_total))
          echo "Final total count: $final_total"

          # Update README.md
          if grep -q "No. of Problems In This Repository:" README.md; then
            sed -i "s/No. of Problems In This Repository: [0-9]*/No. of Problems In This Repository: $final_total/" README.md
          else
            sed -i "/If you find my solutions useful, consider star this repository (●'◡'●)/a\\\\nNo. of Problems In This Repository: $final_total" README.md
          fi
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --staged --quiet || git commit -m "Update problem count to $final_total [skip ci]"
          git push
